name: Release Metabase Embedding SDK for React

on:
  workflow_dispatch:
    inputs:
      sdk_version:
        description: 'SDK version (e.g. 0.1.3)'
        type: string
        required: true
      commit:
        description: 'Optional full-length commit SHA-1 hash'


concurrency:
  # We want to ensure only one job is running at a time because
  # there could be a conflict when updating the readme file.
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Check out the code using the provided commit, or HEAD
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: Run unit tests
        run: yarn embedding-sdk:test-unit

  build-sdk:
    needs: test
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Check out the code using the provided commit, or HEAD
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend

      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: "cljs"

      - name: Build SDK bundle
        run: yarn run build-embedding-sdk

      - name: Generate SDK package.json in the build directory
        run: yarn run embedding-sdk:generate-package

      - name: Upload built package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: metabase-${{ matrix.edition }}-uberjar
          path: ./resources/embedding-sdk

  build-jar:
    needs: test
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    # TODO: Make it so that it only build EE jar, so we don't have to waste another runner for the image we don't use.
    uses: ./.github/workflows/uberjar.yml
    with:
      commit: ${{ github.event.inputs.commit }}

  upload-jar:
    needs: build-jar
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - uses: actions/download-artifact@v4
        name: Retrieve uberjar artifact
        with:
          name: metabase-ee-${{ github.sha }}-uberjar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_RELEASE_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_RELEASE_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload uberjar to S3
        env:
          BUCKET: ${{ vars.AWS_S3_DOWNLOADS_BUCKET }}
          BUCKET_PATH: sdk/v${{ github.event.inputs.sdk_version }}/metabase.jar
          OUTPUT_FILE: ./target/uberjar/metabase.jar
        shell: bash
        run: | # sh
          DATE=$(date '+%Y-%m-%d')
          aws s3 cp ${OUTPUT_FILE}.zip s3://$BUCKET/$BUCKET_PATH

  git-tag:
    needs: build-sdk
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Check out the code using the provided commit, or HEAD
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: Setup git user
        run: |
          git config --global user.email "metabase-bot@metabase.com"
          git config --global user.name "Metabase bot"

      - name: Create a new git tag
        run: |
          git tag embedding-sdk-${{ github.event.inputs.sdk_version }}
      - if: failure()
        run: echo "Make sure the tag 'embedding-sdk-${{ github.event.inputs.sdk_version }}' doesn't exist."

      - name: Push the new tag
        run: |
          git push origin embedding-sdk-${{ github.event.inputs.sdk_version }}

  publish-npm:
    needs: [git-tag, upload-jar]
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - name: Check out the code using the provided commit, or HEAD
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit }}

      - name: Setup git user
        run: |
          git config --global user.email "metabase-bot@metabase.com"
          git config --global user.name "Metabase bot"

      - name: Update readme
        run: |
          sed -i -E 's|(embedding-sdk-)[0-9.]+|\1${{ github.event.inputs.sdk_version }}|' enterprise/frontend/src/embedding-sdk/README.md
          sed -i -E 's|(http://downloads.metabase.com/sdk/v)[0-9.]+|\1${{ github.event.inputs.sdk_version }}|' enterprise/frontend/src/embedding-sdk/README.md

      - name: Bump published npm package version
        run: |
          sed -i -E 's/("version": ").*"/\1${{ github.event.inputs.sdk_version }}"/' enterprise/frontend/src/embedding-sdk/package.template.json

      - name: Create a PR updating readme + published version
        run: |
          git checkout -b update-sdk-version-${{ github.event.inputs.sdk_version }}
          git commit -a -m 'Update Readme version references and published npm version to ${{ github.event.inputs.sdk_version }}'
          gh pr create --base master\
                       --assignee "${GITHUB_ACTOR}"\
                       --title "Update SDK version to ${{ github.event.inputs.sdk_version }}"\
                       --body "Update Readme version references and published npm package version to ${{ github.event.inputs.sdk_version }}"

      - name: Publish to NPM
        run: echo Implement this step once you've ensure other steps works correctly.
