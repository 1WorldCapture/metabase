# This allows Tusk to manually run workflows to check lint/build/tests before creating a PR.
# If you have any questions, please reach out to support@usetusk.ai.

name: Tusk Sanity Check

on:
  workflow_dispatch:
    inputs:
      taskId:
        description: "Tusk Task ID"
        required: true
      runType:
        description: "Tusk Run Type"
        required: true
      runId:
        description: "Tusk Run ID"
        required: true

jobs:
  sanity_check:
    runs-on: ubuntu-latest
    steps:
      - name: Log inputs
        run: |
          echo "Tusk Task ID: ${{ github.event.inputs.taskId }}"
          echo "Tusk Run Type: ${{ github.event.inputs.runType }}"
          echo "Tusk Run ID: ${{ github.event.inputs.runId }}"
          echo "Current Branch: ${{ github.ref }}"
          echo "Repository default branch: ${{ github.event.repository.default_branch }}"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Check which files changed
        uses: dorny/paths-filter@v3.0.0
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-paths.yaml

      - name: Prepare front-end environment
        if: steps.changes.outputs.frontend_all == 'true'
        uses: ./.github/actions/prepare-frontend

      - name: Run lint-staged
        if: steps.changes.outputs.frontend_all == 'true'
        continue-on-error: true
        run: npx lint-staged -v --diff=origin/${{ github.event.repository.default_branch }}

      - name: Log Git reflog and .git folder contents
        run: |
          echo "Git reflog (last 20 entries):"
          git reflog -n 20

          echo "\nDetailed Git reflog (last 10 entries):"
          git reflog -n 10 --pretty=fuller

          echo "\nContents of .git folder:"
          ls -lR .git

          echo "\nContents of .git/config:"
          cat .git/config

          echo "\nContents of .git/HEAD:"
          cat .git/HEAD

          echo "\nList of refs:"
          ls -R .git/refs

          echo "\nContents of .git/index (if exists):"
          if [ -f .git/index ]; then
            hexdump -C .git/index | head -n 20
          else
            echo "index file does not exist"
          fi

      # You must include this step after running all auto-fixing steps
      # - uses: stefanzweifel/git-auto-commit-action@v5
      #   with:
      #     commit_message: "fix(${{ github.run_id }}): auto linting" # The commit message MUST start with "fix(${{ github.run_id }}):"
      #     skip_fetch: true
      #     skip_checkout: true

      # - name: Check types
      #   if: steps.changes.outputs.frontend_all == 'true'
      #   run: yarn type-check-pure
