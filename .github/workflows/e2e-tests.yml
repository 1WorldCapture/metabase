name: E2E Tests

on:
  push:
    branches:
      - 'ci-matrix'

jobs:

  build:
    runs-on: buildjet-2vcpu-ubuntu-2004
    timeout-minutes: 25
    strategy:
      matrix:
        edition: [oss, ee]
    env:
      MB_EDITION: ${{ matrix.edition }}
      INTERACTIVE: false
    steps:
    - uses: actions/checkout@v3
    - name: Prepare front-end environment
      uses: ./.github/actions/prepare-frontend
    - name: Prepare back-end environment
      uses: ./.github/actions/prepare-backend
    - name: Java/AOT prep
      run: |
        source "./bin/prep.sh"
        prep_deps
    - run: ./bin/build version
    - run: ./bin/build translations
    - run: ./bin/build frontend
    - run: ./bin/build licenses
    - run: ./bin/build drivers
    - run: ./bin/build uberjar

    - name: Mark with the commit hash
      run:  git rev-parse --short HEAD > COMMIT-ID
    - name: Rename .jar
      run: mv ./target/uberjar/metabase.jar ./target/uberjar/metabase-${{ matrix.edition }}.jar
    - name: Calculate SHA256 checksum
      run: sha256sum ./target/uberjar/metabase-${{ matrix.edition }}.jar > SHA256.sum
    - name: Upload JARs as artifact
      uses: actions/upload-artifact@v3
      with:
        name: metabase-${{ matrix.edition }}-uberjar
        path: |
          ./target/uberjar/metabase-${{ matrix.edition }}.jar
          ./COMMIT-ID
          ./SHA256.sum

  e2e-tests:
    runs-on: buildjet-2vcpu-ubuntu-2004
    timeout-minutes: 30
    needs: build
    name: e2e-tests-${{ matrix.folder }}-${{ matrix.edition }}
    env:
      MB_EDITION: ${{ matrix.edition }}
      DISPLAY: ""
      QA_DB_ENABLED: true
      ENTERPRISE_TOKEN: ${{ secrets.ENTERPRISE_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        edition: [oss, ee]
        folder:
          - "custom-column"
          - "dashboard"
          - "dashboard-filters"
          - "dashboard-filters-sql"
          - "downloads"
          - "moderation"
          - "native"
          - "native-filters"
          - "native"
          - "permissions"
          - "question"
          - "sharing"
          - "smoketest"
    services:
      maildev:
        image: maildev/maildev
        ports:
          - "80:80"
          - "25:25"
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      postgres-sample:
        image: metabase/qa-databases:postgres-sample-12
        ports:
          - "5432:5432"
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      mongo-sample:
        image: metabase/qa-databases:mongo-sample-4.0
        ports:
          - 27017:27017
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      mysql-sample:
        image: metabase/qa-databases:mysql-sample-8
        ports:
          - 3306:3306
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      name: Retrieve uberjar artifact for ${{ matrix.edition }}
      with:
        name: metabase-${{ matrix.edition }}-uberjar

    - name: Get the version info
      run: |
        jar xf target/uberjar/metabase-${{ matrix.edition }}.jar version.properties
        mkdir -p resources/ && mv version.properties resources/

    - name: Run Cypress tests on ${{ matrix.folder }} with ${{ matrix.edition }}
      run: java -jar target/uberjar/metabase-${{ matrix.edition }}.jar && yarn run test-cypress-no-build --folder ${{ matrix.folder }}
      with:
      -  target/uberjar/metabase-${{ matrix.edition }}.jar
      env:
        TERM: xterm

    - name: Upload Cypress recording upon failure
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-recording-${{ matrix.folder }}-${{ matrix.edition }}
        path: ./cypress
        if-no-files-found: ignore
